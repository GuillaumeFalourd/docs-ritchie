<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ritchie â€“ Run formulas</title><link>https://zupit.github.io/docs-ritchie/how-to/formulas/run-formulas/</link><description>Recent content in Run formulas on Ritchie</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://zupit.github.io/docs-ritchie/how-to/formulas/run-formulas/index.xml" rel="self" type="application/rss+xml"/><item><title>How To: Introduction</title><link>https://zupit.github.io/docs-ritchie/how-to/formulas/run-formulas/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/docs-ritchie/how-to/formulas/run-formulas/introduction/</guid><description>
&lt;h2 id="how-to-run-formulas">How to run formulas?&lt;/h2>
&lt;p>There are two ways to run formulas on Ritchie :&lt;/p>
&lt;ol>
&lt;li>Locally&lt;/li>
&lt;li>Using Docker&lt;/li>
&lt;/ol>
&lt;p>It&amp;rsquo;s good to reinforce that the &lt;strong>default formulas execution method&lt;/strong> is defined during the initialization step with the &lt;strong>&lt;code>rit init&lt;/code>&lt;/strong> command. You can change this setting by running the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit set formula-runner
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://zupit.github.io/docs-ritchie/docs/large-gif-1374x404-.gif" alt="">&lt;/p>
&lt;h3 id="1-locally">1. Locally&lt;/h3>
&lt;p>To run a formula locally, it is necessary to have installed on your computer the formula programming languages dependencies used to create the formula.&lt;/p>
&lt;p>Example: a formula written in &lt;strong>Node&lt;/strong> will need &lt;strong>Node installed&lt;/strong> on the computer, so it will be able to run locally.&lt;/p>
&lt;h3 id="2-through-docker">2. Through Docker&lt;/h3>
&lt;p>All formulas can run regardless the programming language used from the moment you have &lt;strong>&lt;code>DOCKER&lt;/code>&lt;/strong> installed and running.&lt;/p>
&lt;p>{{% alert color=&amp;ldquo;info&amp;rdquo; %}}
Check out on the following example &lt;a href="hello-world-formula">&lt;strong>how to run a &amp;ldquo;Hello World&amp;rdquo; formula&lt;/strong> &lt;/a>
{{% /alert %}}&lt;/p>
&lt;h3 id="3-local--docker-flags">3. Local &amp;amp; Docker Flags&lt;/h3>
&lt;p>You can force Ritchie CLI to execute a formula with a specific method using flags.&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>&lt;code>--local&lt;/code>&lt;/strong> flag will execute a formula with locally (if the default method is Docker).&lt;/li>
&lt;li>The &lt;strong>&lt;code>--docker&lt;/code>&lt;/strong> flag will execute a formula with Docker (if the default method is local).&lt;/li>
&lt;/ul>
&lt;h3 id="4-containers-with-ritchie">4. Containers with Ritchie&lt;/h3>
&lt;p>{{% alert color=&amp;ldquo;warning&amp;rdquo; %}}
All formulas templates contain a &lt;strong>Dockerfile&lt;/strong> which creates a container with &lt;strong>Ritchie CLI&lt;/strong> installed.
{{% /alert %}}&lt;/p>
&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>On this section, you saw how to run a formula on Ritchie. To keep learning:&lt;/p>
&lt;p>ðŸ‘‰ Go to &lt;a href="hello-world-formula">&lt;strong>Hello World formula&lt;/strong>&lt;/a> to see different ways to run a formula on Ritchie.&lt;/p>
&lt;p>ðŸ‘‰ Go to the &lt;a href="https://zupit.github.io/docs-ritchie/docs-ritchie/tutorials/formulas/how-to-create-formulas/">&lt;strong>create formulas&lt;/strong>&lt;/a> section to understand how to create your first automation with Ritchie.&lt;/p></description></item><item><title>How To: Hello World formula</title><link>https://zupit.github.io/docs-ritchie/how-to/formulas/run-formulas/hello-world-formula/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zupit.github.io/docs-ritchie/how-to/formulas/run-formulas/hello-world-formula/</guid><description>
&lt;hr>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;p>{{% alert color=&amp;ldquo;warning&amp;rdquo; %}}
Premisse: After you finished the previous steps -installation and initialization - to access the hello-world formula to test Ritchie, you&amp;rsquo;ll need to add the &lt;a href="https://github.com/ZupIT/ritchie-formulas-demo">&lt;strong>ritchie-formulas-demo&lt;/strong>&lt;/a> repository locally.
{{% /alert %}}&lt;/p>
&lt;p>To do so, you can use the &lt;strong>&lt;code>rit add repo&lt;/code>&lt;/strong> command, or run the command line below:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit add repo --provider=Github --name=demo --repoUrl=https://github.com/ZupIT/ritchie-formulas-demo --priority=1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>{{% alert color=&amp;ldquo;info&amp;rdquo; %}}
You can also check which repositories you&amp;rsquo;re using with the &lt;strong>&lt;code>rit list repo&lt;/code>&lt;/strong> command.
{{% /alert %}}&lt;/p>
&lt;p>Now that you have added the demo repository and check the details of the formula, you can execute this tutorial commands.&lt;/p>
&lt;h2 id="premisse-check-the-formulas-details">Premisse: Check the formula&amp;rsquo;s details&lt;/h2>
&lt;p>To get details about a formula, you can execute the command using with the &lt;strong>&lt;code>--help&lt;/code>&lt;/strong> flag:.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --help
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will return all the flags available for the command execution.&lt;/p>
&lt;p>On Ritchie, you have 6 possibilities to run a formula through these flags:&lt;/p>
&lt;ol>
&lt;li>Via Prompt&lt;/li>
&lt;li>Via Prompt e Docker&lt;/li>
&lt;li>Via Input Flags&lt;/li>
&lt;li>Via Input Flags e Docker&lt;/li>
&lt;li>Via Stdin&lt;/li>
&lt;li>Via Stdin e Docker&lt;/li>
&lt;/ol>
&lt;p>To do so, type the following commands lines:&lt;/p>
&lt;h3 id="case-1-with-prompt">Case 1: With Prompt&lt;/h3>
&lt;p>{{% alert color=&amp;ldquo;warning&amp;rdquo; %}}
As this formula has been coded using Golang, it is necessary to have Golang installed on your computer to run it locally.
{{% /alert %}}&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Select an option for each input parameter and see how the magic works:&lt;/p>
&lt;p>&lt;img src="https://zupit.github.io/docs-ritchie/docs/large-gif-1054x366-.gif" alt="">&lt;/p>
&lt;p>This is the default command line execution, that runs the formula locally using &lt;strong>prompt&lt;/strong> to inform the input parameters.&lt;/p>
&lt;h3 id="case-2-with-prompt-and-docker">Case 2: With Prompt and Docker&lt;/h3>
&lt;p>You can run the same command using the &lt;strong>&amp;ndash;docker&lt;/strong> flag pto execute it remotely (on a container), but still using &lt;strong>prompt&lt;/strong> to inform the inputs parameters:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --docker
&lt;/code>&lt;/pre>&lt;/div>&lt;p>{{% alert color=&amp;ldquo;warning&amp;rdquo; %}}
Docker needs to be installed and running on your computer for this flag to work.
In that case, you won&amp;rsquo;t need to have Golang installed.
{{% /alert %}}&lt;/p>
&lt;h3 id="case-3-with-input-flags">Case 3: With Input Flags&lt;/h3>
&lt;p>You can also run the command informing the inputs through flags (you can know which flags are available using the &lt;strong>&lt;code>--help&lt;/code>&lt;/strong> flag when executing a command). This way, inputs parameters are informed directly with the command line.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --rit_input_text=Dennis --rit_input_boolean=true --rit_input_list=everything --rit_input_password=Ritchie
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="case-4-with-input-flags-and-docker">Case 4: With Input flags and Docker&lt;/h3>
&lt;p>When you combine both &lt;strong>&lt;code>input flags&lt;/code>&lt;/strong> and the &lt;strong>&lt;code>--docker&lt;/code>&lt;/strong> flag, it is possible to run a command remotely (on a container) with the input parameters directly informed on the command line:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">rit demo hello-world --rit_input_text=Dennis --rit_input_boolean=true --rit_input_list=everything --rit_input_password=Ritchie --docker
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="case-5-with-stdin">Case 5: With Stdin&lt;/h3>
&lt;p>You can also run the command with the &lt;strong>&lt;code>--stdin&lt;/code>&lt;/strong> (Standard input) flag. This way, inputs parameters are also informed directly with the command line.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">echo &amp;#39;{&amp;#34;rit_input_text&amp;#34;:&amp;#34;Dennis&amp;#34;, &amp;#34;rit_input_boolean&amp;#34;:&amp;#34;true&amp;#34;, &amp;#34;rit_input_list&amp;#34;:&amp;#34;everything&amp;#34;, &amp;#34;rit_input_password&amp;#34;:&amp;#34;Ritchie&amp;#34;}&amp;#39; | rit demo hello-world --stdin
&lt;/code>&lt;/pre>&lt;/div>&lt;p>{{% alert color=&amp;ldquo;warning&amp;rdquo; %}}
Ritchie uses the &lt;strong>JSON&lt;/strong> format to execute STDIN commands
{{% /alert %}}&lt;/p>
&lt;h3 id="case-6-with-stdin-and-docker">Case 6: With Stdin and Docker&lt;/h3>
&lt;p>When you combine both &amp;ndash;stdin and &amp;ndash;docker flags, it is also possible to run a command remotely (on a container) with the input parameters directly informed on the command line:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">echo &amp;#39;{&amp;#34;rit_input_text&amp;#34;:&amp;#34;Dennis&amp;#34;, &amp;#34;rit_input_boolean&amp;#34;:&amp;#34;true&amp;#34;, &amp;#34;rit_input_list&amp;#34;:&amp;#34;everything&amp;#34;, &amp;#34;rit_input_password&amp;#34;:&amp;#34;Ritchie&amp;#34;}&amp;#39; | rit demo hello-world --stdin --docker
&lt;/code>&lt;/pre>&lt;/div>&lt;p>{{% alert color=&amp;ldquo;info&amp;rdquo; %}}
Take a look at the formulas repositories &lt;a href="https://github.com/ZupIT/ritchie-formulas">&lt;strong>(ex: ritchie-formulas)&lt;/strong>&lt;/a>.
Most of the community formulas are composed of a &lt;a href="https://github.com/ZupIT/ritchie-formulas/tree/master/demo/hello-world">&lt;strong>README&lt;/strong>&lt;/a> explaining what the command does and how to run it.
{{% /alert %}}&lt;/p>
&lt;p>In this section, you saw how to run formulas on Ritchie. To keep learning:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Check which formulas you can run using the following command:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>See how &lt;a href="https://zupit.github.io/docs-ritchie/docs-ritchie/tutorials/formulas/how-to-create-formulas/">&lt;strong>create formula&lt;/strong> &lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>